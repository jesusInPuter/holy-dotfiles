# ░█▀█░▀█▀░█▀▀░█▀█░█▄█░░░░█▀▀░█▀█░█▀█░█▀▀
# ░█▀▀░░█░░█░░░█░█░█░█░░░░█░░░█░█░█░█░█▀▀
# ░▀░░░▀▀▀░▀▀▀░▀▀▀░▀░▀░▀░░▀▀▀░▀▀▀░▀░▀░▀░░
#
shadow = true;

shadow-exclude = [
	"name = 'Notification'",
    "window_type = 'menu'",
    "window_type = 'dropdown_menu'",
    "window_type = 'popup_menu'",
    "window_type = 'tooltip'",
    "class_g = 'Polybar'"
];

# shadow-exclude-reg = "x10+0+0";
# xinerama-shadow-crop = true;

# ░█▀▀░█▀█░█▀▄░▀█▀░█▀█░█▀▀
# ░█▀▀░█▀█░█░█░░█░░█░█░█░█
# ░▀░░░▀░▀░▀▀░░▀▀▀░▀░▀░▀▀▀

fading = true;
fade-in-step = 0.03;
fade-out-step = 0.03;
fade-delta = 3;
no-fading-destroyed-argb = false;

fade-exclude = [
    "class_g = 'Rofi'"
];


# ░█▀█░█▀█░█▀█░█▀▀░▀█▀░▀█▀░█░█
# ░█░█░█▀▀░█▀█░█░░░░█░░░█░░░█░
# ░▀▀▀░▀░░░▀░▀░▀▀▀░▀▀▀░░▀░░░▀░

inactive-opacity = 0.9;
#frame-opacity = 1;
#inactive-opacity-override = false;
active-opacity = 0.9;
#inactive-dim = 0.0;

# focus-exclude = [
# 	"class_g = 'Cairo-clock'",
# 	"class_g ?= 'slop'",
# 	"class_g ?= 'Steam'"
# ];

# inactive-dim-fixed = 1.0;

opacity-rule = [ 
"100:fullscreen && !class_g = 'kitty'",
    "90:focused && class_g = 'Code'",
    "80:!focused && class_g = 'Code'",

    "80:class_g = 'Rofi'",

    "90:focused && class_g = 'Nemo'",
    "80:!focused && class_g = 'Nemo'",

    "80:class_g = 'Polybar'",

    "80:class_g = 'Dunst'",
    "80:window_type = '_NET_WM_WINDOW_TYPE_NOTIFICATION'",
    "80:window_type = 'Notification'",

    "80:focused && class_g = 'Hiddify'",
    "70:!focused && class_g = 'Hiddify'",

    "80:focused && class_g = 'Lxappearance'",
    "70:!focused && class_g = 'Lxappearance'",

    "90:focused && class_g = 'Spotify'",
    "80:!focused && class_g = 'Spotify'",

    "80:focused && class_g = 'kitty'",
    "70:!focused && class_g = 'kitty'",
]

# ░█▀▄░█░░░█░█░█▀▄░█▀▄░▀█▀░█▀█░█▀▀
# ░█▀▄░█░░░█░█░█▀▄░█▀▄░░█░░█░█░█░█
# ░▀▀░░▀▀▀░▀▀▀░▀░▀░▀░▀░▀▀▀░▀░▀░▀▀▀

# --- Subtle and Light Blur Shader Configurations ---

blur: {
	method = "dual_kawase";
    strength = 3; # Lighter than before
    # Add a slightly lighter, softer blur by lowering the strength
    # For even more subtlety, you may use method = "gaussian" and tweak kernel
}

# Optional: Add a very light and subtle gaussian blur kernel
blur-kern = "7x7gaussian";

blur-background-exclude = [
	"class_g = 'slop'",
    "class_g = 'Gnome-screenshot'",
    "class_g = 'xborder'",
    "window_type = 'menu'",
    "window_type = 'dropdown_menu'",
    "window_type = 'tooltip'"
];

# --- Subtle and Light Shadow Shader (Optional) ---
shadow-radius = 7;       # Smaller, softer shadow
shadow-opacity = 0.25;   # Lighter shadow

# ░█▀▀░█▀▀░█▀█░█▀▀░█▀▄░█▀█░█░░░░░█▀▀░█▀▀░▀█▀░▀█▀░▀█▀░█▀█░█▀▀░█▀▀
# ░█░█░█▀▀░█░█░█▀▀░█▀▄░█▀█░█░░░░░▀▀█░█▀▀░░█░░░█░░░█░░█░█░█░█░▀▀█
# ░▀▀▀░▀▀▀░▀░▀░▀▀▀░▀░▀░▀░▀░▀▀▀░░░▀▀▀░▀▀▀░░▀░░░▀░░▀▀▀░▀░▀░▀▀▀░▀▀▀

daemon = false;
vsync = true;
dbus = false;
mark-wmwin-focused = true;
mark-ovredir-focused = true;
detect-rounded-corners = true;
corner-radius = 10;
detect-client-opacity = true;
# use-ewmh-active-win = true;
# unredir-if-possible = false;
# unredir-if-possible-delay = 0;

unredir-if-possible-exclude = [];

detect-transient = true;
detect-client-leader = true;

invert-color-include = [];

# glx-no-rebind-pixmap = false;
use-damage = true;
# xrender-sync-fence = true;

# glx-fshader-win = "";
# force-win-blend = false;

# no-ewmh-fullscreen = false;
# max-brightness = 1.0;

transparent-clipping = false;

log-level = "warn";
show-all-xerrors = true;

backend = "glx";

animations = ({
    triggers = ["geometry"];
    preset = "geometry-change";
    duration = 0.1;
    }, {
    triggers = ["open"];
    preset = "appear";
    duration = 0.16;
    scale = 0.92; 
    }, {
    triggers = ["close"];
    preset = "disappear";
    duration = 0.16;
    scale = 0.92;  
    }, {
    triggers = ["show"];
    preset = "appear";
    scale = 0.98;    
    duration = 0.14;
    }, {
    triggers = ["hide"];
    preset = "disappear";
    scale = 0.98;     
    duration = 0.14;
    })

 glx-fshader-win = "
   uniform float opacity;
   void main() {
     vec4 color = gl_FragColor;
     color.rgb = mix(color.rgb, vec3(1.0), 0.03); // Slightly brighten
     gl_FragColor = vec4(color.rgb, color.a * opacity);
   }
 ";
