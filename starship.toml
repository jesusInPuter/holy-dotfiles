#format = """
#[╭─user───❯](bold blue) $username
#[┣─system─❯](bold yellow) $hostname
#[┣─project❯](bold red) $directory$rust$git_branch$git_state$git_status$package$golang$terraform$docker_context$python$docker_context$nodejs
#[╰─cmd────❯](bold green)
#"""
[username]
style_user = "green bold"
style_root = "red bold"
format = "[$user]($style) "
disabled = false
show_always = true

[hostname]
ssh_only = false
format = 'on [󰣇](bold cyan) '

trim_at = "."
disabled = false

# replace the "❯" symbol in the prompt with "➜"
[character]                            # the name of the module we are configuring is "character"
success_symbol = "[➜](bold green)"     # the "success_symbol" segment is being set to "➜" with the color "bold green"
error_symbol = "[✗](bold red)"

[directory]
read_only = " "
truncation_length = 10
truncate_to_repo = true # truncates directory to root folder if in github repo
style = "bold italic blue"

[cmd_duration]
min_time = 4
show_milliseconds = false
disabled = false
style = "bold italic red"

[conda]
symbol = " "

[c]
symbol = " "
style = "149 bold" # or whatever style you desire.

[cpp]
symbol = " "  # using a nerd font icon for c++
style = "bold #689ad6" # a common blue color for c++

[elixir]
symbol = " "

[git_branch]
symbol = " "

[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'
stashed = "[${count}*](green)" 
modified = "[${count}+](yellow)" 
deleted =  "[${count}-](red)" 
conflicted =  "[${count}~](red)" 
ahead = "⇡${count}"
behind = "⇣${count}"
untracked = "[${count}?](blue)" 
staged = "[${count}+](green)" 

[git_state]
style =	"bold red"
format = "[$state( $progress_current/$progress_total) ]($style)"
rebase = "rebase"
merge = "merge"	
revert = "revert"	
cherry_pick = "cherry"
bisect = "bisect"	
am = "am"	
am_or_rebase = "am/rebase"

[golang]
symbol = " "

[java]
symbol = " "

[julia]
symbol = " "

[haskell]
symbol = "λ "

[memory_usage]
symbol = " "

[nix_shell]
symbol = " "

[package]
symbol = " "

[perl]
symbol = " "

[php]
symbol = " "

[python]
symbol = " "
format = 'via [${symbol}python (${version} )(\($virtualenv\) )]($style)'
style = "bold yellow"
pyenv_prefix = "venv "
python_binary = ["./venv/bin/python", "python", "python3", "python2"]
detect_extensions = ["py"]
version_format = "v${raw}"

[ruby]
symbol = " "

[rust]
symbol = " "

[scala]
symbol = " "

[shlvl]
symbol = " "

[swift]
symbol = "ﯣ "
